/*
 * Copyright 2020 Audio Shinigami Studio.
 *  All rights reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "io.audioshinigami.currencyconverter"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"

        }

        beta {
            versionNameSuffix "-beta"
            minifyEnabled true
            shrinkResources true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        alpha {
            versionNameSuffix "-alpha"
            minifyEnabled true
            shrinkResources true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes.each {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        def api_key = properties.getProperty("api_key", "")

        it.buildConfigField 'String', "API_KEY", api_key

        it.resValue 'string', "api_key", api_key

    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true
        returnDefaultValues = true

        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }

    dataBinding {
        enabled = true
        enabledForTests = true
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //  Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutine_version"
    //APP dependencies #######
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "androidx.core:core-ktx:$core_ktx"
    implementation "com.google.android.material:material:$material_version"
    //Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
    //gson
    implementation "com.google.code.gson:gson:$gson_version"
    //Okhttp3
    implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    //Retrofit2
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit2_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    // Dagger2
    implementation "com.google.dagger:dagger:$dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"
    kaptTest "com.google.dagger:dagger-compiler:$dagger2_version"
    // Architecture Components ########
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    // Timber
    implementation "com.jakewharton.timber:timber:$timber_version"
    // Room DB
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // WorkerManager
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation "androidx.preference:preference:$preference_version"
    // multidex
    implementation "androidx.multidex:multidex:2.0.1"


    // Local Unit tests dependencies #####
    testImplementation "junit:junit:$junit_version"
    testImplementation "androidx.test.ext:junit:1.1.1"
    testImplementation "androidx.test:runner:$test_runner_version"
    //Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_core_test"
    // Robolectric
    testImplementation "androidx.test:core:$robolectric_version"
    testImplementation 'org.robolectric:robolectric:4.3.1'
    // Mockito
    testImplementation "org.mockito:mockito-android:$mockito_version"
    // Espresso
    testImplementation "androidx.test.espresso:espresso-core:$expresso_core_version"
    // Coroutines test
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"
    kaptTest "com.google.dagger:dagger-compiler:$dagger2_version"
    // Hamcrest
    testImplementation "org.hamcrest:hamcrest:$hamcrest_version"
    testImplementation "org.hamcrest:hamcrest-library:$hamcrest_version"
    testImplementation "com.google.truth:truth:$truth_version"


    // Android unit dependencies ###
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    // Coroutines test
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"
//    androidTestImplementation "androidx.arch.core:core-runtime:$arch_core_runtime"
    //Test helpers for LiveData
//    androidTestImplementation "androidx.arch.core:core-testing:$arch_core_test"
    // Espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:$expresso_core_version"
    // Mockito
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
}
